//assist.hpp
#ifndef _ASSIST_HPP
#define _ASSIST_HPP

//インクルード
#include <GL/freeglut.h>
#include <cstdio>
#include <cstring>

//定数
#define SC_INPUT_KEY_DOWN 'e'	//'e'に意味はない。（定数だったらなんでもよい）
#define SC_INPUT_KEY_UP 'f'


/*-----------------------------------------------------------------------------------*
	ステージクラス
	抽象クラス。Main.cppから各イベントが起こったときに呼ばれる。
	各ステージの処理はこのクラスを継承したクラスから行う。
 *-----------------------------------------------------------------------------------*/
class StageClass{
public:
	//コンストラクタを作って初期化をするとよい。
	//StageClass();
	
	//画面再描画時によばれる(1フレーム毎に呼ばれる)
	virtual void Disp() = 0;	//子クラスでのオーバーライドが必須
	
	//2Dの描画
	//Disp()が終わったあと呼ばれる。3D画面の上にステータスを表示するみたいな感じに使う
	virtual void Disp2D(){}
	
	//入力があった場合呼ばれる(eventでなんの入力か判断して、必要な引数をとってつかう)
	//入力されている間はdownとupを繰り返すが、upから次のdownの前にdispが呼ばれることは多分ない
	virtual void Input(char event, int key, int x, int y){
		switch(event){
		case SC_INPUT_KEY_DOWN:	//キーが押されたとき
			break;
		case SC_INPUT_KEY_UP:	//キーが離されたとき
			break;
		}
	}
	
	//デストラクタ
	virtual ~StageClass(){}
};


/*-----------------------------------------------------------------------------------*
	ステージ変更
	主にステージクラスから呼び出して使う
	これを実行した次のDisp()終了時に、ステージが変更される。
 *-----------------------------------------------------------------------------------*/
void ChangeStage(StageClass* next);	//ステージ変更(Main.cppで定義)nextは次のステージクラスのインスタンス



/*-----------------------------------------------------------------------------------*
	FPS測定
	毎フレームごとに呼ぶことで、"FPS: --.-"という形式の文字列のアドレスを返す。
 *-----------------------------------------------------------------------------------*/
char* fps();


#endif	//_ASSIST_HPP
